{"map":"{\"version\":3,\"sources\":[\"/home/v_ampi/Pictures/WTL project/todo_list_3/src/ListItems.js\",\"/home/v_ampi/Pictures/WTL project/todo_list_3/src/App.js\",\"/home/v_ampi/Pictures/WTL project/todo_list_3/src/serviceWorker.js\",\"/home/v_ampi/Pictures/WTL project/todo_list_3/src/index.js\"],\"names\":[\"ListItems\",\"props\",\"listItems\",\"items\",\"map\",\"item\",\"react_default\",\"a\",\"createElement\",\"className\",\"key\",\"type\",\"id\",\"value\",\"text\",\"onChange\",\"e\",\"setUpdate\",\"target\",\"index_es\",\"onClick\",\"deleteItem\",\"icon\",\"react_flip_move_es\",\"duration\",\"easing\",\"library\",\"add\",\"faTrash\",\"App\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"currentItem\",\"addItem\",\"bind\",\"assertThisInitialized\",\"handleInput\",\"preventDefault\",\"newItem\",\"concat\",\"toConsumableArray\",\"setState\",\"Date\",\"now\",\"filteredItems\",\"filter\",\"console\",\"log\",\"align\",\"onSubmit\",\"placeholder\",\"src_ListItems\",\"React\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from 'react';\\r\\nimport './ListItems.css';\\r\\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\\r\\nimport FlipMove from 'react-flip-move';\\r\\n\\r\\nfunction ListItems(props){\\r\\n    const items = props.items;\\r\\n    const listItems = items.map(item =>\\r\\n   {\\r\\n       return <div className=\\\"list\\\" key={item.key}>\\r\\n     <p>\\r\\n         <input type=\\\"text\\\" id={item.key} value={item.text} onChange={(e)=>{\\r\\n             props.setUpdate(e.target.value,item.key)}}/>\\r\\n        <span>\\r\\n       \\r\\n        <FontAwesomeIcon className=\\\"faicons\\\" onClick={() => {\\r\\n            props.deleteItem(item.key)\\r\\n        }} icon=\\\"trash\\\" />\\r\\n        </span>\\r\\n     </p>\\r\\n     \\r\\n    </div>})\\r\\n    return <div>\\r\\n        <FlipMove duration={300} easing=\\\"ease-in-out\\\">\\r\\n        {listItems}\\r\\n        </FlipMove>\\r\\n    \\r\\n    </div>;\\r\\n  }\\r\\n\\r\\n  export default ListItems;\",\"import React from 'react';\\nimport './App.css';\\nimport ListItems from './ListItems'\\nimport { library } from '@fortawesome/fontawesome-svg-core'\\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\\n\\nlibrary.add(faTrash)\\n\\nclass App extends React.Component {\\n  constructor(props){\\n    super(props);\\n    this.state = {\\n      items:[],\\n      currentItem:{\\n        text:'',\\n        key:''\\n      }\\n    }\\n    this.addItem = this.addItem.bind(this);\\n    this.handleInput = this.handleInput.bind(this);\\n    this.deleteItem = this.deleteItem.bind(this);\\n    this.setUpdate = this.setUpdate.bind(this);\\n  }\\n  addItem(e){\\n    e.preventDefault();\\n    const newItem = this.state.currentItem;\\n    if(newItem.text !==\\\"\\\"){\\n      const items = [...this.state.items, newItem];\\n    this.setState({\\n      items: items,\\n      currentItem:{\\n        text:'',\\n        key:''\\n      }\\n    })\\n    }\\n  }\\n  handleInput(e){\\n    this.setState({\\n      currentItem:{\\n        text: e.target.value,\\n        key: Date.now()\\n      }\\n    })\\n  }\\n  deleteItem(key){\\n    const filteredItems= this.state.items.filter(item =>\\n      item.key!==key);\\n    this.setState({\\n      items: filteredItems\\n    })\\n\\n  }\\n  setUpdate(text,key){\\n    console.log(\\\"items:\\\"+this.state.items);\\n    const items = this.state.items;\\n    items.map(item=>{      \\n      if(item.key===key){\\n        console.log(item.key +\\\"    \\\"+key)\\n        item.text= text;\\n      }\\n    return null\\n    }\\n    )\\n    this.setState({\\n      items: items\\n    })\\n    \\n   \\n  }\\n render(){\\n  return (\\n    <div className=\\\"App\\\">\\n      <header>\\n      <h1 align=\\\"center\\\">Todo list</h1>\\n        <form id=\\\"to-do-form\\\" onSubmit={this.addItem}>\\n          <input type=\\\"text\\\" placeholder=\\\"Enter task\\\" value= {this.state.currentItem.text} onChange={this.handleInput}></input>\\n          <button type=\\\"submit\\\">Add</button>\\n        </form>\\n        <p>{this.state.items.text}</p>\\n          \\n          <ListItems items={this.state.items} deleteItem={this.deleteItem} setUpdate={this.setUpdate}/>\\n        \\n      </header>\\n    </div>\\n  );\\n }\\n}\\n\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{16:function(e,t,a){e.exports=a(29)},21:function(e,t,a){},22:function(e,t,a){},23:function(e,t,a){},29:function(e,t,a){\"use strict\";a.r(t);var n=a(0),i=a.n(n),s=a(4),r=a.n(s),c=(a(21),a(13)),l=a(7),o=a(8),u=a(14),m=a(9),d=a(2),h=a(15),p=(a(22),a(23),a(10)),v=a(11);var f=function(e){var t=e.items.map(function(t){return i.a.createElement(\"div\",{className:\"list\",key:t.key},i.a.createElement(\"p\",null,i.a.createElement(\"input\",{type:\"text\",id:t.key,value:t.text,onChange:function(a){e.setUpdate(a.target.value,t.key)}}),i.a.createElement(\"span\",null,i.a.createElement(p.a,{className:\"faicons\",onClick:function(){e.deleteItem(t.key)},icon:\"trash\"}))))});return i.a.createElement(\"div\",null,i.a.createElement(v.a,{duration:300,easing:\"ease-in-out\"},t))},k=a(3),y=a(12);k.b.add(y.a);var b=function(e){function t(e){var a;return Object(l.a)(this,t),(a=Object(u.a)(this,Object(m.a)(t).call(this,e))).state={items:[],currentItem:{text:\"\",key:\"\"}},a.addItem=a.addItem.bind(Object(d.a)(a)),a.handleInput=a.handleInput.bind(Object(d.a)(a)),a.deleteItem=a.deleteItem.bind(Object(d.a)(a)),a.setUpdate=a.setUpdate.bind(Object(d.a)(a)),a}return Object(h.a)(t,e),Object(o.a)(t,[{key:\"addItem\",value:function(e){e.preventDefault();var t=this.state.currentItem;if(\"\"!==t.text){var a=[].concat(Object(c.a)(this.state.items),[t]);this.setState({items:a,currentItem:{text:\"\",key:\"\"}})}}},{key:\"handleInput\",value:function(e){this.setState({currentItem:{text:e.target.value,key:Date.now()}})}},{key:\"deleteItem\",value:function(e){var t=this.state.items.filter(function(t){return t.key!==e});this.setState({items:t})}},{key:\"setUpdate\",value:function(e,t){console.log(\"items:\"+this.state.items);var a=this.state.items;a.map(function(a){return a.key===t&&(console.log(a.key+\"    \"+t),a.text=e),null}),this.setState({items:a})}},{key:\"render\",value:function(){return i.a.createElement(\"div\",{className:\"App\"},i.a.createElement(\"header\",null,i.a.createElement(\"h1\",{align:\"center\"},\"Todo list\"),i.a.createElement(\"form\",{id:\"to-do-form\",onSubmit:this.addItem},i.a.createElement(\"input\",{type:\"text\",placeholder:\"Enter task\",value:this.state.currentItem.text,onChange:this.handleInput}),i.a.createElement(\"button\",{type:\"submit\"},\"Add\")),i.a.createElement(\"p\",null,this.state.items.text),i.a.createElement(f,{items:this.state.items,deleteItem:this.deleteItem,setUpdate:this.setUpdate})))}}]),t}(i.a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));r.a.render(i.a.createElement(b,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[16,1,2]]]);","extractedComments":[]}